generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  uid        String   @unique @default(cuid())
  login      String   @unique
  email      String?  @unique
  idExternal String?  @unique @map("id_external")
  nicename   String
  password   String
  type       String   @default("User")
  status     String   @default("Active")
  language   String   @default("en")
  wallet     String   @default("0x")
  metas      Json?    @default("{}")
  created    DateTime @default(now()) @map("created")
  modified   DateTime @default(now()) @map("modified")

  userBalance UserBalance?
  messages    Message[]
  chats       Chat[]
  modelUsages ModelUsage[]
  images      Image[]

  @@map("user")
}

model Message {
  id         Int      @id @default(autoincrement())
  uid        String?  @unique @default(cuid())
  idChat     Int      @map("id_chat")
  idUser     Int      @map("id_user")
  content    String   @db.LongText
  type       String   @default("user") @map("message_type")
  idRequest  String?  @unique @default(cuid()) @map("id_request")
  responseTo Int?     @map("response_to")
  created    DateTime @default(now()) @map("created")
  modified   DateTime @default(now()) @map("modified")

  responses     Message[]    @relation("responses")
  parentMessage Message?     @relation("responses", fields: [responseTo], references: [id])
  user          User         @relation(fields: [idUser], references: [id])
  chat          Chat?        @relation(fields: [idChat], references: [id])
  modelUsages   ModelUsage[]

  @@map("message")
}

model Chat {
  id          Int      @id @default(autoincrement())
  uid         String   @unique @default(cuid())
  name        String   @default("New Chat")
  description String?  @db.Text
  idUser      Int      @map("id_user")
  system      String   @db.LongText
  status      String   @default("active")
  created     DateTime @default(now()) @map("created")
  modified    DateTime @default(now()) @map("modified")
  metas       Json?    @default("{}")

  user        User         @relation(fields: [idUser], references: [id])
  messages    Message[]
  modelUsages ModelUsage[]

  @@map("chat")
}

model Attachment {
  id         Int      @id @default(autoincrement())
  slug       String   @unique
  name       String   @default("")
  attachment String   @default("")
  mime       String   @default("")
  size       Int      @default(0)
  source     String   @default("")
  acl        String   @default("")
  metas      Json?    @default("{}")
  created    DateTime @default(now()) @map("created")
  modified   DateTime @default(now()) @map("modified")

  @@map("attachment")
}

model AIModel {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?  @db.Text
  inputCost   Decimal  @map("input_cost") @db.Decimal(10, 2)
  outputCost  Decimal  @map("output_cost") @db.Decimal(10, 2)
  maxOutput   Int      @map("max_output")
  latency     Decimal  @db.Decimal(5, 2)
  throughput  Decimal  @db.Decimal(10, 2)
  status      String   @default("active")
  created     DateTime @default(now())
  modified    DateTime @default(now()) @updatedAt

  modelUsages ModelUsage[]

  @@map("ai_model")
}

model BalanceTransaction {
  id            Int         @id @default(autoincrement())
  idUserBalance Int         @map("id_user_balance")
  idPayment     String?     @map("id_payment") @db.Text
  amount        Decimal     @db.Decimal(10, 8)
  currency      String
  type          String
  description   String?     @db.Text
  created       DateTime    @default(now())
  timestamp     BigInt
  txHash        String?     @db.Text
  userBalance   UserBalance @relation(fields: [idUserBalance], references: [id])

  @@map("balance_transaction")
}

model UserBalance {
  id           Int                  @id @default(autoincrement())
  idUser       Int                  @unique @map("id_user")
  balance      Decimal              @db.Decimal(10, 8)
  created      DateTime             @default(now())
  modified     DateTime             @default(now()) @updatedAt
  user         User                 @relation(fields: [idUser], references: [id])
  transactions BalanceTransaction[]

  @@map("user_balance")
}

model ModelUsage {
  id            Int      @id @default(autoincrement())
  idUser        Int      @map("id_user")
  idModel       Int      @map("id_model")
  idChat        Int      @map("id_chat")
  idMessage     Int      @map("id_message")
  tokensUsed    Int      @map("tokens_used")
  cost          Decimal  @db.Decimal(10, 8)
  balanceBefore Decimal  @default(0) @map("balance_before") @db.Decimal(10, 8)
  created       DateTime @default(now())

  user    User    @relation(fields: [idUser], references: [id])
  aiModel AIModel @relation(fields: [idModel], references: [id])
  chat    Chat    @relation(fields: [idChat], references: [id])
  message Message @relation(fields: [idMessage], references: [id])

  @@map("model_usage")
}

model WaitList {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  created  DateTime @default(now())
  modified DateTime @default(now())

  @@map("wait_list")
}

model Image {
  id       Int      @id @default(autoincrement())
  idUser   Int      @map("id_user")
  prompt   String   @default("")
  url      String   @default("")
  metas    Json?    @default("{}")
  created  DateTime @default(now())
  modified DateTime @default(now())

  user User @relation(fields: [idUser], references: [id])

  @@map("image")
}
